{"filter":false,"title":"ManageEspera","tooltip":"/clases/ManageEspera","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":95,"column":0},"action":"insert","lines":["<?php","class ManageEspera {"," private $bd = null;","    private $tabla = \"listaEspera\";","    ","    function __construct(DataBase $bd) {","        $this->bd = $bd;","    }","    ","    function get($idEspera){","        //devuelve un objeto de la clase espera","        $parametros = array();","        $parametros[idEspera] = $idEspera;","        $this->bd->select($this->tabla, \"*\", \"idEspera=:idEspera\", $parametros);","        $fila=$this->bd->getRow();","        $espera = new Espera();","        $espera->set($fila);","        return $espera;","    }","    ","    function delete($idEspera){","        $parametros = array();","        $parametros['idEspera'] = $idEspera;","        return $this->bd->delete($this->tabla, $parametros);","    }","    ","    ","    function deleteEsperass($parametros){","        return $this->bd->delete($this->tabla, $parametros);","    }","    ","  ","    ","    function set(Espera $espera){","        //Update de todos los campos menos el id, el id se usara como el where para el update numero de filas modificadas","        $parametrosSet=array();","        $parametrosSet['$idEspera']=$espera->getIdEspera();","        $parametrosSet['email']=$espera->getEmail();","        $parametrosSet['estado']=$espera->getEstado();","        ","        $parametrosWhere = array();","        $parametrosWhere['idEspera'] = $espera->getIdEspera();","        return $this->bd->update($this->tabla, $parametrosSet, $parametrosWhere);","        ","    }","    ","    function insert(Espera $espera){","        //Se pasa un objeto espera y se inserta, se devuelve el id del elemento con el que se ha insertado","        $parametrosSet=array();","        $parametrosSet['$idEspera']=$espera->getIdEspera();","        $parametrosSet['email']=$espera->getEmail();","        $parametrosSet['estado']=$espera->getEstado();","        return $this->bd->insert($this->tabla, $parametrosSet);","    }","    ","    function getList($pagina=1, $orden=\"\", $nrpp=Constant::NRPP, $condicion =\"1=1\", $parametros = array()){","        ","        $ordenPredeterminado = \"$orden,idEspera\";","        if($orden===\"\" || $orden === null){","            $ordenPredeterminado = \"idEspera\";","        }","         $registroInicial = ($pagina-1)*$nrpp;","         $this->bd->select($this->tabla, \"*\", $condicion, $parametros , $ordenPredeterminado , \"$registroInicial, $nrpp\");","         $r=array();","         while($fila =$this->bd->getRow()){","             $espera = new Espera();","             $espera->set($fila);","             $r[]=$espera;","         }","         return $r;","    }","    ","    function getListJson($pagina=1, $orden=\"\", $nrpp=Constant::NRPP, $condicion =\"1=1\", $parametros = array()){","        $lista = $this->getList($pagina, $orden, $nrpp, $condicion, $parametros);","        $r = \"[ \";","        foreach ($lista as $objeto){","            $r .= $objeto->getJson() . \",\";","        }","        $r = substr($r, 0, -1) . \"]\";","        return $r;","    }","    ","     function getValuesSelect(){","        $this->bd->query($this->tabla, \"ID, Name\", array(), \"Name\");","        $array = array();","        while($fila=$this->bd->getRow()){","            $array[$fila[0]] = $fila[1];","        }","        return $array;","    }","    ","    function count($condicion=\"1 = 1\", $parametros = array()){","        return $this->bd->count($this->tabla, $condicion, $parametros);","    }","}",""],"id":1}]]},"ace":{"folds":[],"scrolltop":1293.3333740234375,"scrollleft":0,"selection":{"start":{"row":95,"column":0},"end":{"row":95,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":67,"state":"start","mode":"ace/mode/text"}},"timestamp":1455648360497,"hash":"5c19ceec3bdb88df8e45203840183f2dc1e3c07f"}