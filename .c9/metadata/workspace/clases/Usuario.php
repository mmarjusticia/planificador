{"filter":false,"title":"Usuario.php","tooltip":"/clases/Usuario.php","ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":65,"column":28},"end":{"row":65,"column":28},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":321,"mode":"ace/mode/php"}},"hash":"a03ce29a593ddec538d977b34bf9b0a630256f70","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":76,"column":1},"action":"insert","lines":["<?php","","class Usuario2 {","","    private $email, $clave, $administrador, $activo;","","    function __construct($email = null, $clave = null, $administrador = null, $activo = null) {","        $this->email = $email;","        $this->clave = $clave;","        $this->administrador = $administrador;","        $this->activo = $activo;","    }","","    function getEmail() {","        return $this->email;","    }","","    function getClave() {","        return $this->clave;","    }","","    function getAdministrador() {","        return $this->administrador;","    }","","    function getActivo() {","        return $this->activo;","    }","","    function setEmail($email) {","        $this->email = $email;","    }","","    function setClave($clave) {","        $this->clave = $clave;","    }","","    function setAdministrador($administrador) {","        $this->administrador = $administrador;","    }","","    function setActivo($activo) {","        $this->activo = $activo;","    }","","    public function getJson() {","        $r = '{';","        foreach ($this as $indice => $valor) {","            $r .= '\"' . $indice . '\":' . json_encode($valor) . ','; //Se codifican algunos caracteres","        }","        $r = substr($r, 0, -1);","        $r .='}';","        return $r;","    }","    function set($valores, $inicio=0){","        $i = 0;","        foreach ($this as $indice => $valor) {","           $this->$indice = $valores[$i+$inicio];","           $i++;","        }","    }","    ","    public function __toString() {","        $r ='';","        foreach ($this as $key => $valor) { ","            $r .= \"$valor \";","        }","        return $r;","    }","    ","    function read() {","        foreach ($this as $key => $valor){","            $this->$key = Request::req($key);","        }","    }","","}"],"id":1}],[{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"remove","lines":["2"],"id":2}]]},"timestamp":1455453083000}